// SCSS mixins
// ---------------------------------------

// $measure = $line-height * $font-size
@mixin flexy-typo-draw-rhythm($use-basehold: false) {
  background-image: linear-gradient(to bottom, cyan 0, rgba(255,255,255,0) 1px);
  background-repeat: repeat-y;
  background-size: 100% 1rem;
}

// Breakpoints. Either set one to one of the breakpoint variables, or use a custom value for minor breakpoints.
// Defaults to min-width, but both min->max and max-width are available too.
// Parts based on https://gist.github.com/timknight/03e6335b8816aa534cf7
@mixin breakpoint($breakpoint) {
  // If using 'medium', 'large' etc output the correct breakpoints from map.
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint: to-int(map-get($breakpoints, $breakpoint));
    @media screen and (min-width: #{$breakpoint / 16 * 1em}) {
      @content;
    }
  } @else {
    @warn "#{$breakpoint} is not a set breakpoint variable";
  }
}

// Root font-size in %, outputted in correct breakpoints.
@mixin flexy-typo-rootsize {
  font-size: nth($sizes, 1) / 16 * 100%;

  // Loop through breakpoints.
  @for $i from 2 through $breakpoints-limit {
    $point: flexy-typo-get-point($i);
    @media screen and (min-width: $point / 16 * 1em) {
      font-size: nth($sizes, $i) / 16 * 100%;
    }
  }
}

// Font-size in rems. Either set per breakpoint or for all.
// Use values as you would for pixels i.e. 16 or use values from the modular scale.
@mixin flexy-typo-fontsize($fontsize, $breakpoint: 0) {
  $font-value: flexy-typo-get-font-size($fontsize, $breakpoint);
  font-size: #{$font-value / flexy-rhythm-get-rootsize(1)}rem;

  @for $i from 2 through $breakpoints-limit {
    $font-value: flexy-typo-get-font-size($fontsize, $i - 1);
    $point: flexy-typo-get-point($i);
    @media screen and (min-width: $point / 16 * 1em) {
      font-size: #{$font-value / flexy-rhythm-get-rootsize($i)}rem;
    }
  }
}

// Advanced baseline magic.
// ! Read the README to help understand what is going on here.
// Parts based on https://gist.github.com/razwan/10662500
@mixin flexy-typo-baseline($fontsize, $lineheight: 2, $below: 2, $breakpoint: 0, $cap-height: $base-cap-height) {
  // Set the line-height (if it isn’t set at 0).
  @if $lineheight != 0 {
    line-height: #{$lineheight}rem;
  }

  $font-value: flexy-typo-get-font-size($fontsize, $breakpoint);

  // Calculate push
  margin-bottom: flexy-rhythm-offset-push($font-value, $lineheight, $below, $breakpoint, $cap-height);
  // Calculate shift
  padding-top: flexy-rhythm-offset-shift($font-value, $lineheight, $below, $breakpoint, $cap-height);

  // Loop through breakpoints.
  @for $i from 2 through $breakpoints-limit {

    $point: flexy-typo-get-point($i);
    @media screen and (min-width: $point / 16 * 1em) {

      $font-value: flexy-typo-get-font-size($fontsize, $i - 1);

      // Calculate push
      margin-bottom: flexy-rhythm-offset-push($font-value, $lineheight, $below, $i, $cap-height);
      // Calculate shift
      padding-top: flexy-rhythm-offset-shift($font-value, $lineheight, $below, $i, $cap-height);
    }
  }
}

@mixin flexy-typo-rhythm($fontsize, $lineheight: 2, $below: 2, $breakpoint: 0, $cap-height: $base-cap-height) {
  @include flexy-typo-fontsize($fontsize, $breakpoint);
  @include flexy-typo-baseline($fontsize, $lineheight, $below, $breakpoint, $cap-height);
}

// Использование:
// @include flexy-type-scale($flexy-typo-base-font-size, flexy-get-modular-scale(golden-ratio));
// Генерация размеров заголовков с помощью modular_scale. См _modular_scale.scss
// Не используйте этот миксин в продакшене вместе с вертикальным ритмом, создан для отладки и примера.
// С вертикальным ритмом в данный момент не проинтегрирован.
@mixin flexy-type-scale($base-font-size, $ratio: 1.333) {
  $temp-font-size: $base-font-size;

  @for $i from 6 through 1 {
    h#{$i} {
      font-size: to-em($temp-font-size);
      line-height: $temp-font-size * $ratio;
    }
    $temp-font-size: $temp-font-size * $ratio;
  }
}